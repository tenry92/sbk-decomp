# ROM splitter configuration file
name: "Snowboard Kids (U)"

# checksums from ROM header offsets 0x10 and 0x14
# used for auto configuration detection
checksum1: 0xDBF4EA9D
checksum2: 0x333E82C0

# base filename used for outputs - [please, no spaces)
basename: "snowboard_kids.u"

# ranges to split the ROM into
# types:
#   asm      - MIPS assembly block.  Symbol names are in 'labels' list below
#   behavior - behavior script
#   bin      - raw binary, usually data
#   header   - ROM header block
#   instrset - instrument set
#   level    - level commands
#   m64      - M64 music sequence bank
#   mio0     - MIO0 compressed data block.  may have texture breakdown
#   ptr      - RAM address or ROM offset pointer
#
#   textures types:
#      rgba   - 16-bit RGBA - [5-5-5-1)
#      ia     - 16/8/4/1-bit greyscale
#      skybox - grid of 32x32 16-bit RGBA
ranges:
   # start,  end,      type,     label
   - [0x000000, 0x000040, "header", "header"]
   - [0x000040, 0x001000, "bin",    "boot"]
   - [0x001000, 0x0A70CC, "asm",    "main", 0x80000400]
   - [0x0A70CC, 0x60F990, "bin",    "data", 0x800A64CC]
   - [0x60F990, 0x800000, "bin",    "fill"]
# Labels for functions or data memory addresses
# All label addresses are RAM addresses
# Order does not matter
labels:
  # functions
  - [0x80000400, "EntryPoint"]
  - [0x800005E4, "thread4"] # reads controller input and handles mem pak
  # - [0x80013F88, "incdec_clamped"] # result: value, amount, increase; clamped 0x00 - 0xFF
  - [0x800996A0, "main"]
  - [0x800996FC, "main_thread"]
  - [0x800998E4, "thread2"]
  - [0x8009C444, "thread5"]
  - [0x8009C8DC, "thread6"]
  - [0x800A4728, "thread7"]
  
  # variables
  - [0x800DF340, "osViModeTable"]
  - [0x800E29C8, "gThread4"]
  - [0x800E4B78, "gThread4MsgQueue"]
  - [0x801237B0, "gMainThread"]
  - [0x80123960, "gThread2"]
  - [0x80158620, "gThread5StackPointer"]
  - [0x8015A620, "gThread6StackPointer"]
  - [0x8015A6B8, "gThread3"]
  
  # more variables (found with debugger)
  - [0x800EC9C2, "gMainMenuActiveItem"] # Battle Race, Skill Game etc.
  - [0x800ECA2F, "gBoardFreeStyle1Paint"]
  - [0x800ECA30, "gBoardAllAround1Paint"]
  - [0x800ECA31, "gBoardAlpine1Paint"]
  - [0x8010AE64, "gCharacterSelectIndex1"] # 1 = Slash, 2 = Nancy etc.; reused for board selection (0 = Free Style)
  - [0x8011C0BC, "gPlayer1GoalRankPrizeCounter"]
  - [0x80121B51, "gCourseMenuActiveItem"]
  - [0x80121D85, "gCharacterSelectIndex2"] # 0 = Slash, 1 = Nancy etc.
  - [0x80121D8C, "gMoneyAccount"] # total money on account
  - [0x80121D8E, "gGoalTotalMoney"]
  - [0x8012201C, "gPlayer1Speed"] # current speed
  - [0x80122027, "gPlayer1ActiveTrick"] # 0 = none
  - [0x80122040, "gTrickPoints"]
  - [0x80122081, "gPlayer1ActiveTrick2"] # (pre-)trick related variable
  - [0x80122288, "gPlayer1Lap"] # 0-based lap
  - [0x80122289, "gPlayer1Place"] # 0 = 1st, 3 = 4th
  - [0x80122290, "gPlayer1Struct"]
  - [0x80122292, "gPlayer1ShotId"]
  - [0x80122294, "gPlayer1ShotCount"]
  - [0x80122295, "gPlayer1ItemId"]
  - [0x801222E8, "gPlayer1CurrentMoney"] # current number of coins for P1 during race
  - [0x801222EA, "gPlayer1GoalGetCoinCounter"] # "GET COIN" countdown
  - [0x801222EC, "gPlayer1MoneyTotal"] # total number of coins collected for P1 during race
  - [0x80328026, "gPlayer1GoalRankPrizeCounter2"]
  - [0x80328086, "gTrickPoints2"] # repurposed on finish
  
  # extracted by n64sym
  # - [0x7003DDD0, "n_alSynRemovePlayer"]
  # - [0x700A0290, "osCreateMesgQueue"]
  # - [0x700A02C0, "osSetEventMesg"]
  # - [0x700A0528, "__osContGetInitData"]
  # - [0x700A05F8, "__osPackRequestData"]
  # - [0x700A06F0, "osCreateThread"]
  # - [0x700A0840, "osStartThread"]
  # - [0x700A0990, "osRecvMesg"]
  # - [0x700A0C3C, "contreaddata_text_017C"]
  # - [0x700A0D30, "osSendMesg"]
  # - [0x700A11C0, "motor_text_0340"]
  # - [0x700A1890, "osPfsFindFile"]
  # - [0x700A1BA0, "osPfsFreeBlocks"]
  # - [0x700A1CF0, "pfsreadwritefile_text_0000"]
  # - [0x700A2674, "__osPfsDeclearPage"]
  # - [0x700A28D8, "pfsallocatefile_text_06E8"]
  # - [0x700A31D0, "__osPfsReleasePages"]
  # - [0x700A3408, "__osBlockSum"]
  # - [0x700A35EC, "__ull_rem"]
  # - [0x700A3628, "__ull_div"]
  # - [0x700A36CC, "__ll_div"]
  # - [0x700A3728, "__ll_mul"]
  # - [0x700A3880, "osWritebackDCache"]
  # - [0x700A3900, "guPerspectiveF"]
  # - [0x700A4070, "osSetThreadPri"]
  # - [0x700A4220, "osInvalDCache"]
  # - [0x700A4A10, "sptask_text_0000"]
  # - [0x700A4DC0, "osSetIntMask"]
  # - [0x700A4F20, "alHeapDBAlloc"]
  # - [0x700A4FD0, "_allocatePVoice"]
  # - [0x700A5570, "sinf"]
  # - [0x700A5890, "alUnlink"]
  # - [0x700A58C0, "alLink"]
  # - [0x700A5950, "osVirtualToPhysical"]
  # - [0x700A5A98, "_timeToSamples"]
  # - [0x700A5AF0, "_freePVoice"]
  # - [0x700A5B28, "_collectPVoices"]
  # - [0x700A5B88, "__freeParam"]
  # - [0x700A5BA0, "__allocParam"]
  # - [0x700A5E70, "alSynNew"]
  # - [0x700A6170, "__osDequeueThread"]
  # - [0x700A61B0, "__osDisableInt"]
  # - [0x700A61D0, "__osRestoreInt"]
  # - [0x700A61F0, "osGetTime"]
  # - [0x700A6280, "osSetTimer"]
  # - [0x700A6360, "__osSiRawStartDma"]
  # - [0x700A6410, "__osSiCreateAccessQueue"]
  # - [0x700A6460, "__osSiGetAccess"]
  # - [0x700A64A4, "__osSiRelAccess"]
  # - [0x700A6AFC, "__osEnqueueAndYield"]
  # - [0x700A6BFC, "__osEnqueueThread"]
  # - [0x700A6C44, "__osPopThread"]
  # - [0x700A6C54, "__osDispatchThread"]
  # - [0x700A6F80, "__osPfsRequestData"]
  # - [0x700A707C, "__osPfsGetInitData"]
  # - [0x700A7200, "__osContDataCrc"]
  # - [0x700A72D0, "__osContRamWrite"]
  # - [0x700A74D4, "contramwrite_text_0204"]
  # - [0x700A7650, "__osContRamRead"]
  # - [0x700A786C, "contramread_text_021C"]
  # - [0x700A79E0, "__osPfsGetStatus"]
  # - [0x700A7AF0, "__osSumcalc"]
  # - [0x700A7B4C, "__osIdCheckSum"]
  # - [0x700A7BB4, "__osRepairPackId"]
  # - [0x700A7FCC, "__osCheckPackId"]
  # - [0x700A8164, "__osGetId"]
  # - [0x700A83C0, "__osCheckId"]
  # - [0x700A84BC, "__osPfsRWInode"]
  # - [0x700A87DC, "__osPfsSelectBank"]
  # - [0x700A8850, "osPfsChecker"]
  # - [0x700A8F14, "corrupted_init"]
  # - [0x700A90C8, "corrupted"]
  # - [0x700A92B0, "xprintf_text_0000"]
  # - [0x700A9920, "_Printf"]
  # - [0x700A9F70, "memcpy"]
  # - [0x700A9FC4, "strchr"]
  # - [0x700AA010, "guMtxF2L"]
  # - [0x700AA110, "guMtxIdentF"]
  # - [0x700AA280, "cosf"]
  # - [0x700AA3F0, "__osSetSR"]
  # - [0x700AA400, "__osGetSR"]
  # - [0x700AA410, "__osSetFpcCsr"]
  # - [0x700AA420, "__osSiRawReadIo"]
  # - [0x700AA470, "__osSiRawWriteIo"]
  # - [0x700AA4C0, "osInvalICache"]
  # - [0x700AA540, "osMapTLBRdb"]
  # - [0x700AA5A0, "osPiRawReadIo"]
  # - [0x700AA600, "bzero"]
  # - [0x700AA890, "__osPiCreateAccessQueue"]
  # - [0x700AA950, "osGetThreadPri"]
  # - [0x700AB250, "osJamMesg"]
  # - [0x700AB3A0, "osPiGetCmdQueue"]
  # - [0x700AB5D4, "__osSetTimerIntr"]
  # - [0x700AB648, "__osInsertTimer"]
  # - [0x700AB7E0, "__osViSwapContext"]
  # - [0x700ABB40, "osGetCount"]
  # - [0x700ABE60, "__osSpSetStatus"]
  # - [0x700ABE70, "__osSpSetPc"]
  # - [0x700ABEB0, "__osSpRawStartDma"]
  # - [0x700ABF40, "__osSpDeviceBusy"]
  # - [0x700ABF70, "__osSpGetStatus"]
  # - [0x700ABF80, "alSynDelete"]
  # - [0x700ABF90, "__osProbeTLB"]
  # - [0x700AC050, "__osAiDeviceBusy"]
  # - [0x700AC080, "alSaveNew"]
  # - [0x700AC0C4, "alMainBusNew"]
  # - [0x700AC118, "alAuxBusNew"]
  # - [0x700AC16C, "alResampleNew"]
  # - [0x700AC1F4, "alLoadNew"]
  # - [0x700AC29C, "alEnvmixerNew"]
  # - [0x700AC340, "init_lpfilter"]
  # - [0x700AC3E0, "alFxNew"]
  # - [0x700AC820, "alSynAllocFX"]
  # - [0x700AC8C0, "alMainBusParam"]
  # - [0x700ACA10, "alLoadParam"]
  # - [0x700ACF90, "load_text_0580"]
  # - [0x700AD560, "alResampleParam"]
  # - [0x700AD974, "alEnvmixerParam"]
  # - [0x700ADC24, "env_text_03C4"]
  # - [0x700ADEBC, "env_text_065C"]
  # - [0x700AE4C0, "alAuxBusParam"]
  # - [0x700AE5D0, "alSaveParam"]
  # - [0x700AE690, "__osSiDeviceBusy"]
  # - [0x700AF2E0, "xldtob_text_0000"]
  # - [0x700AFDA0, "__osResetGlobalIntMask"]
  # - [0x700AFE00, "osEPiRawWriteIo"]
  # - [0x700AFE50, "osEPiRawReadIo"]
  # - [0x700AFEA0, "__osSetGlobalIntMask"]
  # - [0x700AFEF0, "osYieldThread"]
  # - [0x700AFF40, "__osSetCompare"]
  # - [0x700AFF50, "alFilterNew"]
  # - [0x700AFF70, "_doModFunc"]
  # - [0x700B0018, "_filterBuffer"]
  # - [0x700B00D0, "_saveBuffer"]
  # - [0x700B0258, "_loadBuffer"]
  # - [0x700B03E4, "_loadOutputBuffer"]
  # - [0x700B0864, "alFxParam"]
  # - [0x700B0BC0, "alCopy"]
  # - [0x700B0C40, "lldiv"]
  # - [0x700B0D40, "ldiv"]
  - [0x80000300, "osTvType"]
  - [0x80000308, "osRomBase"]
  - [0x8000030C, "osResetType"]
  - [0x8000031C, "osAppNMIBuffer"]
  - [0x8000415C, "__dummy"]
  - [0x800171E8, "n_alSynFreeFX"]
  - [0x8003DEA8, "n_alSeqpDelete"]
  - [0x80042564, "ptstart"]
  - [0x80048E4C, "osSyncPrintf"]
  - [0x80072958, "myfree"]
  - [0x800A02C0, "osSetEventMesg"]
  - [0x800A0330, "osContInit"]
  - [0x800A0528, "__osContGetInitData"]
  - [0x800A05F8, "__osPackRequestData"]
  - [0x800A06F0, "osCreateThread"]
  - [0x800A0840, "osStartThread"]
  - [0x800A0990, "osRecvMesg"]
  - [0x800A0AD0, "osContStartReadData"]
  - [0x800A0B94, "osContGetReadData"]
  - [0x800A0D30, "osSendMesg"]
  - [0x800A0E80, "osMotorStop"]
  - [0x800A133C, "osMotorInit"]
  - [0x800A1620, "osPfsInitPak"]
  - [0x800A1890, "osPfsFindFile"]
  - [0x800A1A50, "osPfsNumFiles"]
  - [0x800A1BA0, "osPfsFreeBlocks"]
  - [0x800A1DEC, "osPfsReadWriteFile"]
  - [0x800A21F0, "osPfsAllocateFile"]
  - [0x800A2674, "__osPfsDeclearPage"]
  - [0x800A29A0, "__osGetId"]
  - [0x800A2C00, "osPfsFileState"]
  - [0x800A2EF0, "osPfsDeleteFile"]
  - [0x800A31D0, "__osPfsReleasePages"]
  - [0x800A3408, "__osBlockSum"]
  - [0x800A3500, "sprintf_text_0000"]
  - [0x800A3524, "sprintf"]
  - [0x800A3580, "osSyncPrintf_dupl"]
  - [0x800A35EC, "__ull_rem"]
  - [0x800A3628, "__ull_div"]
  - [0x800A3664, "__ll_lshift"]
  - [0x800A36CC, "__ll_div"]
  - [0x800A3728, "__ll_mul"]
  - [0x800A3758, "__ull_divremi"]
  - [0x800A37B8, "__ll_mod"]
  - [0x800A3854, "__ll_rshift"]
  - [0x800A3880, "osWritebackDCache"]
  - [0x800A3900, "guPerspectiveF"]
  - [0x800A3B30, "guPerspective"]
  - [0x800A3B90, "osStopThread"]
  - [0x800A3C50, "osInitialize"]
  - [0x800A3EE0, "osCreatePiManager"]
  - [0x800A4070, "osSetThreadPri"]
  - [0x800A41B0, "osViBlack"]
  - [0x800A4220, "osInvalDCache"]
  - [0x800A42D0, "osPiStartDma"]
  - [0x800A43E0, "osViSetSpecialFeatures"]
  - [0x800A4900, "osViSetMode"]
  - [0x800A4970, "osViSetEvent"]
  - [0x800A4B1C, "osSpTaskLoad"]
  - [0x800A4C84, "osSpTaskStartGo"]
  - [0x800A4CD0, "osSpTaskYield"]
  - [0x800A4CF0, "osSpTaskYielded"]
  - [0x800A4D70, "osViSwapBuffer"]
  - [0x800A4DC0, "osSetIntMask"]
  - [0x800A4E60, "osViGetCurrentFramebuffer"]
  - [0x800A4EE0, "alHeapInit"]
  - [0x800A4F80, "alSynAddPlayer"]
  - [0x800A4FD0, "_allocatePVoice"]
  - [0x800A50B8, "alSynAllocVoice"]
  - [0x800A5200, "alSynStopVoice"]
  - [0x800A5280, "alSynStartVoice"]
  - [0x800A5310, "alSynSetFXMix"]
  - [0x800A53B0, "alSynSetVol"]
  - [0x800A5450, "alSynSetPan"]
  - [0x800A54E0, "alSynSetPitch"]
  - [0x800A5730, "osAiSetFrequency"]
  - [0x800A5890, "alUnlink"]
  - [0x800A58C0, "alLink"]
  - [0x800A58E4, "alClose"]
  - [0x800A591C, "alInit"]
  - [0x800A5950, "osVirtualToPhysical"]
  - [0x800A59D0, "osAiSetNextBuffer"]
  - [0x800A5A98, "_timeToSamples"]
  - [0x800A5AF0, "_freePVoice"]
  - [0x800A5B28, "_collectPVoices"]
  - [0x800A5B88, "__freeParam"]
  - [0x800A5BA0, "__allocParam"]
  - [0x800A5BD8, "alAudioFrame"]
  - [0x800A5E70, "alSynNew"]
  - [0x800A6170, "__osDequeueThread"]
  - [0x800A61B0, "__osDisableInt"]
  - [0x800A61D0, "__osRestoreInt"]
  - [0x800A61F0, "osGetTime"]
  - [0x800A6280, "osSetTimer"]
  - [0x800A6360, "__osSiRawStartDma"]
  - [0x800A6410, "__osSiCreateAccessQueue"]
  - [0x800A6460, "__osSiGetAccess"]
  - [0x800A64A4, "__osSiRelAccess"]
  - [0x800A64D0, "__osExceptionPreamble"]
  - [0x800A64E0, "__osException"]
  - [0x800A6C44, "__osPopThread"]
  - [0x800A6C54, "__osDispatchThread"]
  - [0x800A6DD0, "__osCleanupThread"]
  - [0x800A6DE0, "osPfsIsPlug"]
  - [0x800A6F80, "__osPfsRequestData"]
  - [0x800A7150, "__osContAddressCrc"]
  - [0x800A7200, "__osContDataCrc"]
  - [0x800A72D0, "__osContRamWrite"]
  - [0x800A7650, "__osContRamRead"]
  - [0x800A79E0, "__osPfsGetStatus"]
  - [0x800A7AF0, "__osSumcalc"]
  - [0x800A7B4C, "__osIdCheckSum"]
  - [0x800A7BB4, "__osRepairPackId"]
  - [0x800A7FCC, "__osCheckPackId"]
  - [0x800A83C0, "__osCheckId"]
  - [0x800A84BC, "__osPfsRWInode"]
  - [0x800A87DC, "__osPfsSelectBank"]
  - [0x800A8850, "osPfsChecker"]
  - [0x800A8F14, "corrupted_init"]
  - [0x800A90C8, "corrupted"]
  - [0x800A9920, "_Printf"]
  - [0x800A9F9C, "strlen"]
  - [0x800A9FC4, "strchr"]
  - [0x800AA110, "guMtxIdentF"]
  - [0x800AA198, "guMtxIdent"]
  - [0x800AA1C8, "guMtxL2F"]
  - [0x800AA400, "__osGetSR"]
  - [0x800AA420, "__osSpRawReadIo"]
  - [0x800AA470, "__osSpRawWriteIo"]
  - [0x800AA950, "osGetThreadPri"]
  - [0x800AA970, "osPiRawStartDma"]
  - [0x800AAA50, "osEPiRawStartDma"]
  - [0x800AAC80, "__osDevMgrMain"]
  - [0x800AB110, "__osViInit"]
  - [0x800AB250, "osJamMesg"]
  - [0x800AB3A0, "osPiGetCmdQueue"]
  - [0x800AB3B8, "MusPtrBankGetCurrent"]
  - [0x800AB45C, "__osTimerInterrupt"]
  - [0x800AB5D4, "__osSetTimerIntr"]
  - [0x800AB648, "__osInsertTimer"]
  - [0x800AB7D0, "__osGetActiveQueue"]
  - [0x800AB7E0, "__osViSwapContext"]
  - [0x800ABEB0, "__osSpRawStartDma"]
  - [0x800AC080, "alSaveNew"]
  - [0x800AC0C4, "alMainBusNew"]
  - [0x800AC118, "alAuxBusNew"]
  - [0x800AC16C, "alResampleNew"]
  - [0x800AC1F4, "alLoadNew"]
  - [0x800AC29C, "alEnvmixerNew"]
  - [0x800AC340, "init_lpfilter"]
  - [0x800AC3E0, "alFxNew"]
  - [0x800AC820, "alSynAllocFX"]
  - [0x800AC8C0, "alMainBusParam"]
  - [0x800AC8F0, "alMainBusPull"]
  - [0x800ACA10, "alLoadParam"]
  - [0x800ACBE4, "alRaw16Pull"]
  - [0x800AD0BC, "alAdpcmPull"]
  - [0x800AD560, "alResampleParam"]
  - [0x800AD64C, "alResamplePull"]
  - [0x800AD888, "_frexpf"]
  - [0x800AD974, "alEnvmixerParam"]
  - [0x800ADF6C, "alEnvmixerPull"]
  - [0x800AE4C0, "alAuxBusParam"]
  - [0x800AE4F0, "alAuxBusPull"]
  - [0x800AE5D0, "alSaveParam"]
  - [0x800AE604, "alSavePull"]
  - [0x800AE690, "__osSiDeviceBusy"]
  - [0x800AEF40, "osDestroyThread"]
  - [0x800AF040, "_Litob"]
  - [0x800AF850, "_Ldtob"]
  - [0x800AFDA0, "__osResetGlobalIntMask"]
  - [0x800AFEA0, "__osSetGlobalIntMask"]
  - [0x800AFEF0, "osYieldThread"]
  - [0x800B0018, "_filterBuffer"]
  - [0x800B00D0, "_saveBuffer"]
  - [0x800B0258, "_loadBuffer"]
  - [0x800B03E4, "_loadOutputBuffer"]
  - [0x800B0608, "alFxParamHdl"]
  - [0x800B0864, "alFxParam"]
  - [0x800B087C, "alFxPull"]
  - [0x800B0C40, "lldiv"]
  - [0x800B0D40, "ldiv"]
  - [0x800DCBFC, "__osPiDevMgr"]
  - [0x800DE5A4, "osClockRate"]
  - [0x800DF2B0, "__osContinitialized"]
  - [0x800DF2C0, "__osMotorinitialized"]
  - [0x800DF2D8, "osViClock"]
  - [0x800DF2E0, "__OSGlobalIntMask"]
  - [0x800DF2F0, "__osPiDevMgr_dupl"]
  - [0x800DF2F8, "player_bss_003C"]
  - [0x800DF310, "__osCurrentHandle"]
  - [0x800E0060, "alGlobals"]
  - [0x800E0070, "aisetnextbuf_data_0000"]
  - [0x800E0088, "__osRunQueue"]
  - [0x800E008C, "__osActiveQueue"]
  - [0x800E0090, "__osRunningThread"]
  - [0x800E00A0, "__osSiAccessQueueEnabled"]
  - [0x800E00D0, "xprintf_data_0000"]
  - [0x800E00F4, "xprintf_data_0024"]
  - [0x800E0120, "__osPiAccessQueueEnabled"]
  - [0x800E0130, "vi_data_0000"]
  - [0x800E0190, "__osActiveQueue_dupl"]
  - [0x800E0194, "__osViNext"]
  - [0x800E01A0, "__osTimerList"]
  - [0x800E01B0, "drvrNew_data_0000"]
  - [0x800E0218, "drvrNew_data_0068"]
  - [0x800E02A0, "drvrNew_data_00F0"]
  - [0x800E02C8, "drvrNew_data_0118"]
  - [0x800E02F0, "drvrNew_data_0140"]
  - [0x800E0318, "drvrNew_data_0168"]
  - [0x800E0320, "__osViCurr"]
  - [0x800E0328, "__osViNext_dupl"]
  - [0x800E0340, "env_data_0000"]
  - [0x800E043E, "env_data_00FE"]
  - [0x800E0480, "xlitob_data_0000"]
  - [0x800E0494, "xlitob_data_0014"]
  - [0x800E04B0, "osViModePalLan1"]
  - [0x800E0500, "osViModeMpalLan1"]
  - [0x800E0550, "osViModeNtscLan1"]
  - [0x800E1AF0, "perspective_rodata_0000"]
  - [0x800E1B00, "__osRcpImTable"]
  - [0x800E1BD0, "synthesizer_rodata_0000"]
  - [0x800E1BD8, "synthesizer_rodata_0008"]
  - [0x800E1C30, "xprintf_rodata_0000"]
  - [0x800E1C34, "xprintf_rodata_0004"]
  - [0x800E1C3C, "xprintf_rodata_000C"]
  - [0x800E1D80, "devmgr_rodata_0000"]
  - [0x800E1DB0, "drvrNew_rodata_0000"]
  - [0x800E1DC8, "drvrNew_rodata_0018"]
  - [0x800E1DF8, "resample_rodata_0028"]
  - [0x800E1E00, "resample_rodata_0030"]
  - [0x800E1E20, "env_rodata_0010"]
  - [0x800E1E70, "xldtob_rodata_0000"]
  - [0x800E1EB8, "xldtob_rodata_0048"]
  - [0x800E1EBC, "xldtob_rodata_004C"]
  - [0x800E1EC8, "xldtob_rodata_0058"]
  - [0x800E1ED0, "reverb_rodata_0000"]
  - [0x800E1EF0, "reverb_rodata_0020"]
  - [0x80121938, "gzip_data_0000"]
  - [0x8015943C, "__osContPifRam"]
  - [0x8015C980, "__osEventStateTab"]
  - [0x8015CA00, "__osContPifRam_dupl"]
  - [0x8015CA40, "__osContLastCmd"]
  - [0x8015CA41, "__osMaxControllers"]
  - [0x8015CA68, "__osEepromTimerQ"]
  - [0x8015CA80, "__osEepromTimerMsg"]
  - [0x8015CA90, "_MotorStopData"]
  - [0x8015CB90, "_MotorStartData"]
  - [0x8015CC90, "_motorstopbuf"]
  - [0x8015CCB0, "_motorstartbuf"]
  - [0x8015CCD0, "__osFinalrom"]
  - [0x8015CCE0, "pimgr_bss_0000"]
  - [0x8015CE90, "pimgr_bss_01B0"]
  - [0x8015DE90, "pimgr_bss_11B0"]
  - [0x8015DEA8, "pimgr_bss_11C8"]
  - [0x8015E29C, "__osPfsPifRam"]
  - [0x8015E564, "__osCurrentTime"]
  - [0x8015F110, "siacs_bss_0000"]
  - [0x8015F118, "__osSiAccessQueue"]
  - [0x8015F130, "__osPfsPifRam_dupl"]
  - [0x8015F278, "__osPiAccessQueue"]
  - [0x8015F2B8, "__osBaseCounter"]
  - [0x8015F2C0, "__osTimerCounter"]
